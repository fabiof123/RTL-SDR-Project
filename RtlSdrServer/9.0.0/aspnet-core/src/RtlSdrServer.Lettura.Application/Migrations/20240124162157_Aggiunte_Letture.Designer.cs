// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RtlSdrServer.Lettura.Application;

#nullable disable

namespace RtlSdrServer.Lettura.Application.Migrations
{
    [DbContext(typeof(LetturaDbContext))]
    [Migration("20240124162157_Aggiunte_Letture")]
    partial class Aggiunte_Letture
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RtlSdrServer.Lettura.Application.Lettura", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FrequenzaFinale")
                        .HasPrecision(20, 10)
                        .HasColumnType("decimal(20,10)");

                    b.Property<decimal>("FrequenzaIniziale")
                        .HasPrecision(20, 10)
                        .HasColumnType("decimal(20,10)");

                    b.HasKey("Id");

                    b.ToTable("Letture", (string)null);
                });

            modelBuilder.Entity("RtlSdrServer.Lettura.Application.PotenzaSegnale", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Frequenza")
                        .HasPrecision(20, 10)
                        .HasColumnType("decimal(20,10)");

                    b.Property<long>("LetturaId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Valore")
                        .HasPrecision(20, 10)
                        .HasColumnType("decimal(20,10)");

                    b.HasKey("Id");

                    b.HasIndex("LetturaId");

                    b.ToTable("PotenzaSegnali", (string)null);
                });

            modelBuilder.Entity("RtlSdrServer.Lettura.Application.Lettura", b =>
                {
                    b.OwnsOne("RtlSdrServer.Lettura.Application.Posizione", "Posizione", b1 =>
                        {
                            b1.Property<long>("LetturaId")
                                .HasColumnType("bigint");

                            b1.Property<decimal>("Latitudine")
                                .HasPrecision(20, 10)
                                .HasColumnType("decimal(20,10)")
                                .HasColumnName("PosizioneLatitudine");

                            b1.Property<decimal>("Longitudine")
                                .HasPrecision(20, 10)
                                .HasColumnType("decimal(20,10)")
                                .HasColumnName("PosizioneLongitudine");

                            b1.HasKey("LetturaId");

                            b1.ToTable("Letture");

                            b1.WithOwner()
                                .HasForeignKey("LetturaId");
                        });

                    b.Navigation("Posizione")
                        .IsRequired();
                });

            modelBuilder.Entity("RtlSdrServer.Lettura.Application.PotenzaSegnale", b =>
                {
                    b.HasOne("RtlSdrServer.Lettura.Application.Lettura", null)
                        .WithMany("PotenzaSegnali")
                        .HasForeignKey("LetturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RtlSdrServer.Lettura.Application.Lettura", b =>
                {
                    b.Navigation("PotenzaSegnali");
                });
#pragma warning restore 612, 618
        }
    }
}
